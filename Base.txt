-- Создание базы данных
CREATE DATABASE bookstore;

-- Использование базы данных
USE bookstore;

-- Создание таблицы actions для слайда
CREATE TABLE actions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    image VARCHAR(255) NOT NULL
);

-- Создание таблицы offers для акций
CREATE TABLE offers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT NOT NULL
);

-- Создание таблицы users
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    middle_name VARCHAR(255),
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    phone VARCHAR(20),
    wallet DECIMAL(10, 2) DEFAULT 0.00,
    nickname VARCHAR(255) NOT NULL,
	role ENUM('user', 'admin', 'editor') DEFAULT 'user'
);

-- Создание таблицы books
CREATE TABLE books (
    id INT AUTO_INCREMENT PRIMARY KEY,
	user_id INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    author VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    description TEXT,
    genre VARCHAR(255),
    image VARCHAR(255),
	category VARCHAR(255),
    discount DECIMAL(5, 2),
	average_rating DECIMAL(3, 2) DEFAULT 0,
    review_count INT DEFAULT 0,
    file_path VARCHAR(255),
	FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Создание таблицы reviews
CREATE TABLE reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    book_id INT NOT NULL,
    user_id INT NOT NULL,
    rating INT NOT NULL CHECK (rating >= 1 AND rating <= 5),
    review TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (book_id) REFERENCES books(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Заполнение таблицы actions данными
INSERT INTO actions (image) VALUES
('slide1.jpg'),
('slide2.jpg'),
('slide3.jpg');

-- Заполнение таблицы offers данными
INSERT INTO offers (title, description) VALUES
('Приглашение на Чёрную пятницу', 'Приходите, чтобы зажечь выгоду!'),
('Новогодние подарки', 'Подарочные сертификаты на книги для ваших близких!'),
('Детские сказки', 'Скидки на детские книги и сказки!');  

-- Создание триггера для автоматического обновления средней оценки и количества отзывов при добавлении нового отзыва
DELIMITER $$

CREATE TRIGGER update_book_rating
AFTER INSERT ON reviews
FOR EACH ROW
BEGIN
    DECLARE new_average DECIMAL(3, 2);
    DECLARE new_count INT;

    -- Получение текущей средней оценки и количества отзывов
    SELECT AVG(rating), COUNT(*) INTO new_average, new_count
    FROM reviews
    WHERE book_id = NEW.book_id;

    -- Обновление таблицы books
    UPDATE books
    SET average_rating = new_average, review_count = new_count
    WHERE id = NEW.book_id;
END $$

DELIMITER ;

-- Создание таблицы notifications для хранения уведомлений
CREATE TABLE notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL, -- ID пользователя, которому адресовано уведомление
    book_id INT,          -- ID книги, связанной с уведомлением (если применимо)
    message TEXT NOT NULL, -- Текст уведомления
    status ENUM('unread', 'read') DEFAULT 'unread', -- Статус уведомления
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Дата и время создания уведомления
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (book_id) REFERENCES books(id)
);
